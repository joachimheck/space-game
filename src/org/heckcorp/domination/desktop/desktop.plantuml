@startuml

title __DESKTOP's Class Diagram__\n

  namespace org.heckcorp.domination {
    namespace desktop {
      class org.heckcorp.domination.desktop.ComputerPlayer {
          {static} - serialVersionUID : long
          + ComputerPlayer()
          + move()
          + setModel()
          + setView()
          - getClosest()
          - getEnemiesInRange()
          - getEnemyCityHex()
          - moveUnit()
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      class org.heckcorp.domination.desktop.Domination {
          - cityMenu : JMenu
          - enabled : boolean
          {static} - instance : Domination
          {static} - log : Logger
          {static} + getInstance()
          + hexClicked()
          {static} + main()
          + setViewingPlayerActive()
          # displayAboutPopup()
          # displayTextPopup()
          # loadGame()
          # skipSelectedUnit()
          # sleepSelectedUnit()
          # waitSelectedUnit()
          - Domination()
          {static} - createAndShowGUI()
          - createMenuBar()
          - createViewAndModel()
          - saveGame()
          - windowOpened()
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      class org.heckcorp.domination.desktop.Domination.ActionManager {
          + manage()
          - defineActions()
          - defineKeyMaps()
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      class org.heckcorp.domination.desktop.HumanPlayer {
          # lock : Lock
          # notMoving : Condition
          # turnFinished : Condition
          # unitReady : Condition
          - finishingTurn : boolean
          - moving : boolean
          {static} - serialVersionUID : long
          - turnOver : boolean
          + HumanPlayer()
          + finishTurn()
          + interrupt()
          + move()
          + setReadyUnit()
          + startTurn()
          + turnFinished()
          + unitActionFinished()
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      class org.heckcorp.domination.desktop.NeutralPlayer {
          {static} - serialVersionUID : long
          + NeutralPlayer()
          + move()
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      class org.heckcorp.domination.desktop.Pathfinder {
          {static} - serialVersionUID : long
          + Pathfinder()
          + findPath()
          - createPath()
          - findNode()
          - generateSuccessors()
          - getLowestScoreNode()
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      class org.heckcorp.domination.desktop.Pathfinder.Node {
          + point : Point
          - cost : Integer
          - distance : Integer
          + Node()
          + computeDistance()
          + getCost()
          + getDistance()
          + getScore()
          + setCost()
          + setDistance()
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      class org.heckcorp.domination.desktop.TurnManager {
          {static} - log : Logger
          - players : List<Player>
          {static} - serialVersionUID : long
          - thread : Thread
          - turnOver : boolean
          + TurnManager()
          + getWinningPlayer()
          + interrupt()
          + run()
          + setModel()
          + start()
          + turnFinished()
          - finishTurn()
          - getReadyUnit()
          - moveUnitsWithOrders()
          - runPlayerTurn()
          - selectUnits()
          - startTurn()
      }
    }
  }
  

  org.heckcorp.domination.desktop.ComputerPlayer -up-|> org.heckcorp.domination.Player
  org.heckcorp.domination.desktop.ComputerPlayer o-- org.heckcorp.domination.GameModel : model
  org.heckcorp.domination.desktop.ComputerPlayer o-- org.heckcorp.domination.ComputerPlayerView : myView
  org.heckcorp.domination.desktop.Domination .up.|> org.heckcorp.domination.ViewMonitor
  org.heckcorp.domination.desktop.Domination -up-|> javax.swing.JPanel
  org.heckcorp.domination.desktop.Domination o-- org.heckcorp.domination.desktop.view.SequentialExecutor : executor
  org.heckcorp.domination.desktop.Domination o-- org.heckcorp.domination.GameModel : model
  org.heckcorp.domination.desktop.Domination o-- org.heckcorp.domination.desktop.view.SwingView : view
  org.heckcorp.domination.desktop.Domination +-down- org.heckcorp.domination.desktop.Domination.ActionManager
  org.heckcorp.domination.desktop.HumanPlayer -up-|> org.heckcorp.domination.Player
  org.heckcorp.domination.desktop.NeutralPlayer -up-|> org.heckcorp.domination.Player
  org.heckcorp.domination.desktop.Pathfinder .up.|> java.io.Serializable
  org.heckcorp.domination.desktop.Pathfinder o-- org.heckcorp.domination.HexMap : map
  org.heckcorp.domination.desktop.Pathfinder +-down- org.heckcorp.domination.desktop.Pathfinder.Node
  org.heckcorp.domination.desktop.Pathfinder.Node o-- org.heckcorp.domination.desktop.Pathfinder.Node : predecessor
  org.heckcorp.domination.desktop.TurnManager .up.|> java.io.Serializable
  org.heckcorp.domination.desktop.TurnManager .up.|> java.lang.Runnable
  org.heckcorp.domination.desktop.TurnManager o-- org.heckcorp.domination.DefaultModel : model
  org.heckcorp.domination.desktop.TurnManager o-- org.heckcorp.domination.Player : startPlayer


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
