@startuml

title __VIEW's Class Diagram__\n

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.AnimatedImageIcon {
            ~ loop : boolean
            - currentFrame : int
            - images : BufferedImage[]
            - timer : Timer
            + AnimatedImageIcon()
            + getFrameCount()
            + setAnimated()
            + setAnimationTime()
            + setCurrentFrame()
            + setLoop()
            + step()
            - setImageByFrame()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.Counter {
            ~ lastTime : long
            {static} - ANIMATION_TIME : int
            {static} - MOVE_SPEED : int
            - borderColor : Color
            - damaged : boolean
            - destination : Point
            - hidden : boolean
            - mapLocation : Point
            - mapPosition : Point
            - moveTimer : Timer
            - normal : Point2D
            - offset : Point
            - oldLocation : Point
            - onScreen : boolean
            - realLocation : Point2D
            - speed : int
            + Counter()
            + addObserver()
            + deleteObserver()
            + getCenterLocation()
            + getIcon()
            + getMapPosition()
            + isHidden()
            + moveCenterTo()
            + moveTo()
            + paintComponent()
            + setAnimated()
            + setAnimationTime()
            + setBorderColor()
            + setCenterLocation()
            + setCurrentFrame()
            + setDamaged()
            + setHidden()
            + setLoop()
            + setMapLocation()
            + setMapPosition()
            + setOnScreen()
            + setSpeed()
            - updateCounterLocation()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.HexDescriptionPanel {
            - locationLabel : JLabel
            - ownerLabel : JLabel
            - productionLabel : JLabel
            - unitsBox : Box
            + HexDescriptionPanel()
            + setHex()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.HexDescriptionPanel.UnitDescriptionPanel {
            + UnitDescriptionPanel()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.MapPane {
            - oldBounds : Rectangle
            - tileHeight : int
            - tileWidth : int
            - viewport : Rectangle
            + MapPane()
            + drawHexCenters()
            + getHexCenter()
            + getHexCoordinates()
            + getHexCorner()
            + getViewport()
            + getViewportHexCenter()
            + getViewportPixelSize()
            + getViewportSize()
            + guessHex()
            + initialize()
            + isInViewport()
            + isMapPointInViewport()
            + paintComponent()
            + setBounds()
            + setViewportBounds()
            + setViewportPosition()
            - drawHex()
            - toMapCoordinates()
            - toViewportCoordinates()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.MapView {
            {static} + MAP_LAYER : Integer
            {static} + SPRITE_LAYER : Integer
            {static} + TOP_SPRITE_LAYER : Integer
            - hScrollBar : JScrollBar
            - layeredPane : JLayeredPane
            - listeners : Set<MapViewListener>
            - vScrollBar : JScrollBar
            + MapView()
            + add()
            + addMapViewListener()
            + adjustmentValueChanged()
            + centerHex()
            + centerRectangle()
            + getMapPane()
            + initialize()
            + isInitialized()
            + moveToFront()
            + removeCounter()
            - adjustPositions()
            - notifyViewportBounds()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        interface org.heckcorp.domination.desktop.view.MapViewListener {
            {abstract} + setViewportBounds()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.MiniMap {
            - viewport : Rectangle
            + MiniMap()
            + getPreferredSize()
            + initialize()
            + paintComponent()
            + setViewportBounds()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.ObservableState {
            + setChanged()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        enum State {
          ANIMATING
          FINISHED_ANIMATING
          FINISHED_MOVING
          MOVING
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.SequentialExecutor {
            {static} - executor : SequentialExecutor
            - run : boolean
            - tasks : List<Runnable>
            + execute()
            {static} + getInstance()
            + run()
            + stop()
            - SequentialExecutor()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.SwingView {
            - log : Logger
            + SwingView()
            + addGamePiece()
            + attack()
            + initialize()
            + message()
            + move()
            + selectHex()
            + setCurrentPlayer()
            + setMap()
            + setMonitor()
            + setStatus()
            + setWinningPlayer()
            - getMap()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.SwingView.DisplayManager {
            + DisplayManager()
            + displayPositions()
            + hideAttackArrow()
            + hideSelection()
            + moveCounter()
            + moveToFront()
            + pause()
            + relocateCounters()
            + setCounterStatus()
            + setCounterVisibility()
            + showAttackArrow()
            + showCounter()
            + update()
            + updateShadowMap()
            - invokeAndWait()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.SwingView.UIManager {
            - textArea : JTextArea
            - textScrollPane : JScrollPane
            + UIManager()
            + clearTextArea()
            + getMapView()
            + getMiniMap()
            + getUnitIcon()
            + initialize()
            + message()
            - createCounter()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.SwingView.ViewDataManager {
            - counters : Map<GamePiece, Counter>
            - pieces : Map<Counter, GamePiece>
            + addPiece()
            + getCounter()
            + getCounters()
            + getGamePiece()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.UIResources {
            + selectedHexPix : BufferedImage[]
            + spaceshipPic : BufferedImage[]
            + tilePic : BufferedImage[]
            {static} - instance : UIResources
            + getAttackArrow()
            + getExplosion()
            {static} + getInstance()
            + getSelection()
            + getSpaceshipImages()
            {static} + initializeResources()
            - UIResources()
        }
      }
    }
  }
  

  namespace org.heckcorp.domination {
    namespace desktop {
      namespace view {
        class org.heckcorp.domination.desktop.view.Util {
            {static} + getImage()
            {static} + getImages()
            {static} + getResource()
        }
      }
    }
  }
  

  org.heckcorp.domination.desktop.view.AnimatedImageIcon -up-|> javax.swing.ImageIcon
  org.heckcorp.domination.desktop.view.AnimatedImageIcon o-- org.heckcorp.domination.desktop.view.ObservableState : state
  org.heckcorp.domination.desktop.view.Counter -up-|> javax.swing.JLabel
  org.heckcorp.domination.desktop.view.Counter o-- org.heckcorp.domination.desktop.view.AnimatedImageIcon : icon
  org.heckcorp.domination.desktop.view.Counter o-- org.heckcorp.domination.desktop.view.ObservableState : state
  org.heckcorp.domination.desktop.view.HexDescriptionPanel -up-|> javax.swing.JPanel
  org.heckcorp.domination.desktop.view.HexDescriptionPanel o-- org.heckcorp.domination.desktop.view.SwingView.UIManager : uiManager
  org.heckcorp.domination.desktop.view.HexDescriptionPanel +-down- org.heckcorp.domination.desktop.view.HexDescriptionPanel.UnitDescriptionPanel
  org.heckcorp.domination.desktop.view.HexDescriptionPanel.UnitDescriptionPanel -up-|> javax.swing.JPanel
  org.heckcorp.domination.desktop.view.HexDescriptionPanel.UnitDescriptionPanel o-- org.heckcorp.domination.Unit : unit
  org.heckcorp.domination.desktop.view.MapPane -up-|> javax.swing.JPanel
  org.heckcorp.domination.desktop.view.MapPane o-- org.heckcorp.domination.HexMap : map
  org.heckcorp.domination.desktop.view.MapPane o-- org.heckcorp.domination.desktop.view.UIResources : resources
  org.heckcorp.domination.desktop.view.MapView .up.|> java.awt.event.AdjustmentListener
  org.heckcorp.domination.desktop.view.MapView -up-|> javax.swing.JPanel
  org.heckcorp.domination.desktop.view.MapView o-- org.heckcorp.domination.HexMap : map
  org.heckcorp.domination.desktop.view.MapView o-- org.heckcorp.domination.desktop.view.MapPane : mapPane
  org.heckcorp.domination.desktop.view.MiniMap .up.|> org.heckcorp.domination.desktop.view.MapViewListener
  org.heckcorp.domination.desktop.view.MiniMap -up-|> javax.swing.JPanel
  org.heckcorp.domination.desktop.view.MiniMap o-- org.heckcorp.domination.HexMap : map
  org.heckcorp.domination.desktop.view.ObservableState -up-|> java.util.Observable
  org.heckcorp.domination.desktop.view.ObservableState +-down- org.heckcorp.domination.desktop.view.ObservableState.State
  org.heckcorp.domination.desktop.view.SequentialExecutor .up.|> java.lang.Runnable
  org.heckcorp.domination.desktop.view.SequentialExecutor .up.|> java.util.concurrent.Executor
  org.heckcorp.domination.desktop.view.SwingView .up.|> org.heckcorp.domination.GameView
  org.heckcorp.domination.desktop.view.SwingView -up-|> javax.swing.JPanel
  org.heckcorp.domination.desktop.view.SwingView o-- org.heckcorp.domination.desktop.view.SwingView.ViewDataManager : dataManager
  org.heckcorp.domination.desktop.view.SwingView o-- org.heckcorp.domination.desktop.view.SwingView.DisplayManager : displayManager
  org.heckcorp.domination.desktop.view.SwingView o-- org.heckcorp.domination.HexMap : map
  org.heckcorp.domination.desktop.view.SwingView o-- org.heckcorp.domination.ViewMonitor : monitor
  org.heckcorp.domination.desktop.view.SwingView o-- org.heckcorp.domination.desktop.view.UIResources : resources
  org.heckcorp.domination.desktop.view.SwingView o-- org.heckcorp.domination.desktop.view.SwingView.UIManager : uiManager
  org.heckcorp.domination.desktop.view.SwingView +-down- org.heckcorp.domination.desktop.view.SwingView.DisplayManager
  org.heckcorp.domination.desktop.view.SwingView +-down- org.heckcorp.domination.desktop.view.SwingView.UIManager
  org.heckcorp.domination.desktop.view.SwingView +-down- org.heckcorp.domination.desktop.view.SwingView.ViewDataManager
  org.heckcorp.domination.desktop.view.SwingView.DisplayManager .up.|> java.util.Observer
  org.heckcorp.domination.desktop.view.SwingView.DisplayManager o-- org.heckcorp.domination.desktop.view.MapView : mapView
  org.heckcorp.domination.desktop.view.SwingView.DisplayManager o-- org.heckcorp.domination.desktop.view.MiniMap : miniMap
  org.heckcorp.domination.desktop.view.SwingView.DisplayManager o-- org.heckcorp.domination.desktop.view.Counter : selectedCounter
  org.heckcorp.domination.desktop.view.SwingView.UIManager -up-|> javax.swing.JPanel
  org.heckcorp.domination.desktop.view.SwingView.UIManager o-- org.heckcorp.domination.desktop.view.HexDescriptionPanel : hexDescriptionPanel
  org.heckcorp.domination.desktop.view.SwingView.UIManager o-- org.heckcorp.domination.desktop.view.MapView : mapView
  org.heckcorp.domination.desktop.view.SwingView.UIManager o-- org.heckcorp.domination.desktop.view.MiniMap : miniMap
  org.heckcorp.domination.desktop.view.UIResources o-- org.heckcorp.domination.desktop.view.Counter : attackArrow
  org.heckcorp.domination.desktop.view.UIResources o-- org.heckcorp.domination.desktop.view.Counter : explosion
  org.heckcorp.domination.desktop.view.UIResources o-- org.heckcorp.domination.desktop.view.Counter : selection


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
